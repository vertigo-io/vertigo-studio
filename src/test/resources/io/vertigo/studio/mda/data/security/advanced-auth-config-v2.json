{
	"globalAuthorizations": [{
		"name": "Admusr",
		"label": "security.authorization.admin.user"
	}, {
		"name": "Admpro",
		"label": "security.authorization.admin.profil"
	}, {
		"name": "Admapp",
		"label": "security.authorization.admin.appli"
	}],
	"securedEntities": [{
		"entity": "Record",
		"securityFields" : ["utiIdOwner","typId","amount" ],
		"securityDimensions": [{
				"name": "etaCd", "type": "ENUM", "values": ["CRE", "VAL", "PUB", "NOT", "REA", "ARC", "EXP"]
			},{
				"name": "GEO", "type": "TREE", "fields": [ "regId", "depId", "comId" ]
			}
		],
		"operations": [  {
			"__comment": "Visibilité attribuable avec un montant maximum, et visibilité pour l'utilisateur créateur.",
			"name": "read2", "label" : "Lecture",
			"rules": [
				"amount<=${montantMax} or utiIdOwner=${utiId}"
			]
		}, {
			"__comment": "Visibilité attribuable avec un montant maximum, et visibilité pour l'utilisateur créateur.",
			"name": "read3", "label" : "Lecture",
			"rules": [
				"(amount<=${montantMax} AND utiIdOwner!=${utiId}) or (amount>${montantMax} AND utiIdOwner=${utiId})"
			]
		},{
			"__comment": "Tests uniquement",
			"name": "test", "label" : "Test",
			"rules": [
				"((amount<${montantMax} OR amount=${montantMax} OR amount<=${montantMax}) AND utiIdOwner!=${utiId}) or ((amount>${montantMax} OR amount=${montantMax} OR amount>=${montantMax}) AND utiIdOwner=${utiId})"
			]
		},{
			"__comment": "Tests uniquement",
			"name": "test2", "label" : "Test Enum",
			"rules": [
				"etaCd<NOT OR etaCd<=PUB OR etaCd=PUB OR etaCd!=PUB OR etaCd>VAL OR etaCd>=PUB"				
			]
		},{
			"__comment": "Tests uniquement",
			"name": "test3", "label" : "Test Tree",
			"rules": [
				"GEO<${geo} OR GEO<=${geo} OR GEO=${geo} OR GEO!=${geo} OR GEO>${geo} OR GEO>=${geo}"				
			]
		}, {
			"__comment": "Visibilité attribuable avec un montant maximum, et visibilité pour l'utilisateur créateur.",
			"name": "read", "label" : "Lecture",
			"grants": ["read2", "read3"],
			"rules": [
				"amount<=${montantMax}",
				"utiIdOwner=${utiId}"
			]
		}, {
			"__comment": "Visibilité globale attribuée avec une opération transverser Hors Périmétre. Sans régles = toujours ok.",
			"name": "readHp", "label" : "Lecture hors périmétre",
			"overrides": ["read"],
			"rules": ["true"]
		}, {
			"__comment": "Ecriture possible par l'utilisateur créateur avant que le marché ne soit Archivé, ou avec un montant max avant Archivé.",
			"name": "write", "label" : "Edition",
			"grants": ["read"],
			"rules": [
				"utiIdOwner=${utiId} and etaCd<ARC",
				"typId=${typId} and amount>0 and amount<=${montantMax} and etaCd<ARC"
			]
		}, {
			"__comment": "Création attribuable par type et par montant maximum.",
			"name": "create", "label" : "Creation",
			"grants": ["read"],
			"rules": [
				"typId=${typId} and amount<=${montantMax}"
			]
		}, {
			"__comment": "Suppression attribuable par type de marché ou pour le créateur tant que non Publié (Attribué sans type = régle non vérifiée).",
			"name": "delete", "label" : "Suppression",
			"grants": ["read", "write"],
			"rules": [
				"typId=${typId}",
				"utiIdOwner=${utiId} and etaCd<PUB"
			]
		}, {
			"__comment": "Notification par type de marché et dans le respect de la hierachy geographique. Overrides WRITE : donne l'opération WRITE en conservant le périmètre de l'opération NOTIFY",
			"name": "notify", "label" : "Notification",
			"grants": ["read"],
			"overrides": ["write"], 
			"rules": [
				"typId=${typId} and etaCd=PUB and GEO<=${geo}"
			]
		}]
	}]
}